# RUN: ./compile-and-run-program.sh %s | FileCheck %s
# CHECK: 2

data IntTy = IntCons (PrimInt);

binding intcons = \() -> IntTy { IntCons (2) };

binding id = \(idxparam: () -> IntTy) -> IntTy {     
    case idxparam () of
        IntCons (x) -> IntCons (x);
};


binding compose = \(f:(Boxed) -> Boxed g:(Boxed) -> Boxed x:(Boxed) -> Boxed) -> Boxed {
    let 
        binding gx = \(g:Boxed x:Boxed) () -> Boxed { g (x) };
    in f (gx)
};

binding pullapart = \() -> IntTy { compose (id id intcons) };

binding main = \() -> Boxed { 
    case pullapart () of
        IntCons (x) -> printInt (x);
};
